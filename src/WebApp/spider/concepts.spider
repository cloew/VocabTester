use angular;
use console;

angular.module('Concepts', ['ui.bootstrap', 'kao.loading', 'Language', 'Forms'])
    .controller('LearnedFormsController', fn($scope, FormsService, LanguageService, LoadingTracker) {
        var form = FormsService.current();
        $scope.formName = form.pluralName;
        $scope.quizUrl = form.randomQuizPath;
        $scope.tracker = new LoadingTracker();
        
        LanguageService.watchCurrentLanguage($scope, fn(event, language) {
            $scope.tracker.load(form.getLearned()).success(fn(data) {
                $scope.concepts = data.concepts;
                $scope.isWords = data.isWords;
            }).error(fn(error) {
                console.log(error);
            });
        });
    })
    .directive('conceptCount', fn() {
        return {
            restrict: 'E',
            replace: true,
            scope: {
                conceptList: '=',
                header: '=',
                isWords: '='
            },
            controller: fn($scope) {
                $scope.isOpen = false;
            },
            templateUrl: 'static/partials/directives/concept_count.html'
        };
    })
    .directive('conceptTable', fn() {
        return {
            restrict: 'E',
            replace: true,
            scope: {
                concepts: '=',
                isWords: '='
            },
            templateUrl: 'static/partials/directives/concept_table.html'
        };
    })
    .directive('conceptTableHeader', fn() {
        return {
            restrict: 'A',
            replace: false,
            scope: {
                isWords: '='
            },
            template:  '<th ng-if="isWords">Word</th>
                        <th ng-if="!isWords">Symbol</th>
                        <th>Native</th>
                        <th>Mastery</th>'
        };
    })
    .directive('conceptTableRow', fn() {
        return {
            restrict: 'A',
            replace: false,
            scope: {
                concept: '='
            },
            template:  '<td>{{concept.foreign.text}}</td>
                        <td>{{concept.native.text}}</td>
                        <td>{{concept.mastery}}</td>'
        };
    });